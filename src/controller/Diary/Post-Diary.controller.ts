import { GoogleGenerativeAI } from "@google/generative-ai";
import { Response, Request } from "express";
import "dotenv/config";
import { prisma } from "../../utils/prisma";

export const PostDiary = async (req: Request, res: Response) => {
  const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY!);

  const model = genAI.getGenerativeModel({ model: "gemini-2.0-flash" });

  try {
    const { text, targetLang = "mn" } = req.body || {};
    const { userId } = req.params;

    if (!text || typeof text !== "string") {
      return res.status(400).json({ error: "text —Ç–∞–ª–±–∞—Ä —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π" });
    }

    const createDiary = await prisma.diaryNote.create({
      data: {
        userId: Number(userId),
        note: text,
      },
    });

    console.log("createDiary", createDiary);

    const diary = await prisma.diaryNote.findUnique({
      where: { id: Number(createDiary?.id) },
    });

    const EmotionCategory = [
      "–ë–ê–Ø–†–¢–ê–ô", // –±–∞—è—Ä —Ö”©”©—Ä—Ç—ç–π
      "–ì–£–ù–ò–ì–¢–ê–ô", // –≥–∞–Ω—Å–∞—Ä—Å–∞–Ω
      "–°–¢–†–ï–°–°–¢–≠–ô", // —à–∞–ª–≥–∞–ª—Ç, –¥–∞–∞–ª–≥–∞–≤–∞—Ä, –∞—á–∞–∞–ª–∞–ª—Ç–∞–π “Ø–µ–¥
      "–¢–ê–ô–í–ê–ù", // chill, –∞–º–≥–∞–ª–∞–Ω
      "–£–£–†–¢–ê–ô", // –±—É—Ö–∏–º–¥—Å–∞–Ω, —Ü—É—Ö–∞–ª–¥—Å–∞–Ω
    ];
    if (!diary) return res.status(404).json({ error: "Diary –æ–ª–¥—Å–æ–Ω–≥“Ø–π" });

    const prompt = [
      `–ß–∏ ”©—Å–≤”©—Ä –Ω–∞—Å–Ω—ã —Ö“Ø“Ø—Ö–¥–∏–π–Ω ”©–¥”©—Ä —Ç—É—Ç–º—ã–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª–∏–π–≥ —É–Ω—à–∏–∂ –¥“Ø–≥–Ω—ç–ª—Ç —Ö–∏–π–¥—ç–≥ —Ç—É—Å–ª–∞—Ö.`,
      `–ß–∏–Ω–∏–π –∑–æ—Ä–∏–ª–≥–æ –Ω—å —Ç—É—Ö–∞–π–Ω ”©–¥—Ä–∏–π–≥ –±–æ–≥–∏–Ω–æ, –æ–π–ª–≥–æ–º–∂—Ç–æ–π, —Å–æ–Ω–∏—Ä—Ö–æ–ª—Ç–æ–π –±–∞–π–¥–ª–∞–∞—Ä —à–∏–Ω–∂–∏–ª–∂, —Ö“Ø“Ø—Ö–¥—ç–¥ ”©”©—Ä–∏–π–≥”©”© –æ–π–ª–≥–æ—Ö–æ–¥ —Ç—É—Å–ª–∞—Ö —è–≤–¥–∞–ª.`,
      `–ß–∏ ”©—Å–≤”©—Ä –Ω–∞—Å–Ω—ã —Ö“Ø“Ø—Ö–¥–∏–π–Ω ”©–¥”©—Ä —Ç—É—Ç–º—ã–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª–∏–π–≥ —à–∏–Ω–∂–ª—ç—Ö AI —Ç—É—Å–ª–∞—Ö. 
”®–≥”©–≥–¥”©–ª: 
- mood: unknown 
- actionDone: false 
- streak: 0 
- progress: 0 
- diary note: ${diary.note}- –•—ç—Ç –∞–ª–±–∞–Ω —ë—Å–Ω—ã, —Ç–æ–º —Ö“Ø–Ω–∏–π –∑”©–≤–ª”©–≥”©”© —à–∏–≥ –±“Ø“Ø –±–∏—á.  
- –ë–æ–≥–∏–Ω–æ, –¥–æ—Ç–Ω–æ, ”©—Å–≤”©—Ä –Ω–∞—Å–Ω—ã—Ö–∞–Ω–¥ –æ–π–ª–≥–æ–º–∂—Ç–æ–π “Ø–≥ –∞—à–∏–≥–ª–∞.  
- –ù–∞–π–∑–¥–∞–∞ —á–∞—Ç –±–∏—á–∏–∂ –±–∞–π–≥–∞–∞ —é–º —à–∏–≥ —ç–Ω–≥–∏–π–Ω—ç—ç—Ä –±–∏—á.  
- Emoji-–≥ –±–∞–π–Ω–≥–∞ –∞—à–∏–≥–ª–∞.  
- "”©”©—Ä–∏–π–≥”©”© —Ö”©–≥–∂“Ø“Ø–ª—ç—Ö", "—Å–∞–π–∂—Ä—É—É–ª–∞—Ö –æ—Ä–æ–ª–¥–ª–æ–≥–æ" –≥—ç—Ö –∞–ª–±–∞–Ω “Ø–≥ –±“Ø“Ø —Ö—ç—Ä—ç–≥–ª—ç.  
`,
      `”®–¥—Ä–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª–∏–π–≥ —É–Ω—à–∞–∞–¥ –∑”©–≤—Ö”©–Ω JSON –±“Ø—Ç—ç—Ü—Ç—ç–π–≥—ç—ç—Ä –¥–∞—Ä–∞–∞—Ö –º—ç–¥—ç—ç–ª–ª–∏–π–≥ –≥–∞—Ä–≥–∞:`,

      `1. "summary": üß© ”®–¥—Ä–∏–π–Ω –µ—Ä”©–Ω—Ö–∏–π –º—ç–¥—Ä—ç–º–∂–∏–π–≥ 1‚Äì2 ”©–≥“Ø“Ø–ª–±—ç—Ä—ç—ç—Ä —Ç–æ–≤—á —Ç–∞–π–ª–±–∞—Ä–ª–∞. –≠–Ω–≥–∏–π–Ω, –¥–æ—Ç–Ω–æ, —ç–º–æ–¥–∂–∏ –∞—à–∏–≥–ª–∞.`,

      `2. "trigger": üîç –¢—É—Ö–∞–π–Ω ”©–¥—Ä–∏–π–Ω —Å—ç—Ç–≥—ç–ª —Å–∞–Ω–∞–∞–Ω–¥ —Ö–∞–º–≥–∏–π–Ω –∏—Ö –Ω”©–ª”©”©–ª—Å”©–Ω –≥–æ–ª “Ø–π–ª —è–≤–¥–∞–ª, 1‚Äì2 –∂–∏–∂–∏–≥ –∑“Ø–π–ª –±–∞–π–∂ –±–æ–ª–Ω–æ.`,

      `3. "positive": ‚ú® ”®–¥—Ä–∏–π–Ω —ç–µ—Ä—ç–≥ —Ç–∞–ª –±—É—é—É ”©”©—Ä—Ç”©”© —Ö–∏–π—Å—ç–Ω —Å–∞–π–Ω “Ø–π–ª–¥—ç–ª, –∞–∑ –∂–∞—Ä–≥–∞–ª –º—ç–¥—ç—Ä—Å—ç–Ω –∂–∏–∂–∏–≥ –∑“Ø–π–ª.`,

      `4. "suggestion": üéØ –î–∞—Ä–∞–∞–≥–∏–π–Ω ”©–¥”©—Ä—Ç —Ö—ç—Ä—ç–≥–∂“Ø“Ø–ª—ç—Ö—ç–¥ –∞–º–∞—Ä, –±–æ–≥–∏–Ω–æ –∑”©–≤–ª”©–≥”©”© ”©–≥.`,

      `5. "mood_score": üìä ”®–¥—Ä–∏–π–Ω —Å—ç—Ç–≥—ç–ª —Å–∞–Ω–∞–∞–≥ 1‚Äì5-–∞–∞—Å “Ø–Ω—ç–ª–Ω—ç (1: –º–∞—à –º—É—É, 5: —Å—É–ø–µ—Ä —Å–∞–π–Ω)`,

      `6. "insight": üí° ”®–Ω”©”©–¥”©—Ä —é—É —à–∏–Ω—ç –∑“Ø–π–ª –æ–π–ª–≥–æ—Å–æ–Ω, —é—É —Å–æ–Ω–∏—Ä—Ö—Å–æ–Ω –∑—ç—Ä—ç–≥ –∂–∏–∂–∏–≥ –æ–π–ª–≥–æ–ª—Ç.`,
      `7. "emotion": ”®–¥—Ä–∏–π–Ω —Ç—ç–º–¥—ç–≥–ª—ç–ª –¥—ç—ç—Ä “Ø–Ω–¥—ç—Å–ª—ç–Ω —Å—ç—Ç–≥—ç–ª —Ö”©–¥–ª”©–ª–∏–π–≥ —Ç–æ–¥–æ—Ä—Ö–æ–π–ª. –ë–æ–ª–æ–º–∂–∏—Ç –∞–Ω–≥–∏–ª–∞–ª: ${EmotionCategory.join(
        ", "
      )}. –•—ç—Ä—ç–≤ –Ω—ç–≥—ç—ç—Å –æ–ª–æ–Ω emotion –∏–ª—ç—Ä–≤—ç–ª JSON array —Ö—ç–ª–±—ç—Ä—ç—ç—Ä –≥–∞—Ä–≥–∞.`,

      `–ì–∞—Ä–≥–∞–ª—Ç—ã–≥ –∑”©–≤—Ö”©–Ω JSON —Ñ–æ—Ä–º–∞—Ç—Ç–∞–π –±—É—Ü–∞–∞. Markdown code block –∞—à–∏–≥–ª–∞—Ö–≥“Ø–π.`,

      `–ñ–∏—à—ç—ç: 
{
  "summary": "”®–Ω”©”©–¥”©—Ä —à–∞–ª–≥–∞–ª—Ç—Ç–∞–π –±–∞–π—Å–∞–Ω –±–æ–ª–æ—Ö–æ–æ—Ä –∂–∞–∞—Ö–∞–Ω —Å—Ç—Ä–µ—Å—Å—Ç—ç–π –±–∞–π–ª–∞–∞ üò£.",
  "trigger": "üìö –®–∞–ª–≥–∞–ª—Ç—ã–Ω –¥–∞—Ä–∞–º—Ç",
  "positive": "üëØ –ù–∞–π–∑—Ç–∞–π–≥–∞–∞ —Ö–∞–º—Ç –±—ç–ª–¥—Å—ç–Ω –Ω—å —Å—ç—Ç–≥—ç–ª —Å–∞–Ω–∞–∞–≥ –º–∞–∞–Ω—å –¥—ç—ç—Ä–¥“Ø“Ø–ª—Å—ç–Ω",
  "suggestion": "üåø ”®–Ω”©”© –æ—Ä–æ–π 10 –º–∏–Ω—É—Ç –∞–ª—Ö–∞–∂ –∞–º—Ä–∞–ª—Ç —Ö–∏–π",
  "mood_score": 3,
  "insight": "–®–∞–ª–≥–∞–ª—Ç–∞–∞—Å ”©–º–Ω”© —Ç–∞–π–≤—à–∏—Ä—á –±—ç–ª–¥—ç—Ö –Ω—å “Ø—Ä –¥“Ø–Ω—Ç—ç–π –≥—ç–¥–≥–∏–π–≥ –º—ç–¥—Å—ç–Ω",
}`,
    ].join("\n");

    // —á–∏–Ω–∏–π –æ–¥–æ–æ–≥–∏–π–Ω prompt-–æ–æ —Ö—ç—Ä—ç–≥–ª—ç–Ω—ç

    const result = await model.generateContent([
      { text: prompt },
      { text: `–¢—ç–º–¥—ç–≥–ª—ç–ª:\n${diary.note}` },
    ]);

    let cleanOutput = result.response.text().trim();
    if (cleanOutput.startsWith("```json")) {
      cleanOutput = cleanOutput
        .replace(/^```json\s*/, "")
        .replace(/\s*```$/, "");
    }

    console.log("cleanoutpt", cleanOutput);

    res.send("succ");
    // const parsed = JSON.parse(cleanOutput);

    // const analysis = await prisma.aiAnalysis.create({
    //   data: {
    //     diaryNoteId: diary.id,
    //     summary: parsed.summary,
    //     emotions: Array.isArray(parsed.emotion)
    //       ? parsed.emotion
    //       : [parsed.emotion],
    //     horoscope: parsed.horoscope,
    //     message: parsed.motivational_message,
    //     calendarTasks: Array.isArray(parsed.calendarTasks)
    //       ? parsed.calendarTasks
    //       : [parsed.calendarTasks],
    //     calendarHighlight: parsed.calendarHighlight,
    //     calendarType: parsed.calendarType,
    //     calendarDate: new Date(diary.createdAt),
    //   },
    // });

    // res.json({ createDiary });
  } catch (err: any) {
    console.error("summarize error:", err);
    return res.status(500).json({ error: "AI output-–≥ parse —Ö–∏–π–∂ —á–∞–¥—Å–∞–Ω–≥“Ø–π" });
  }
};
