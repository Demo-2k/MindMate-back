// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EmotionCategory {
  БАЯРТАЙ // баяр хөөртэй
  ГУНИГТАЙ // гансарсан
  СТРЕССТЭЙ // шалгалт, даалгавар, ачаалалтай үед
  ТАЙВАН // chill, амгалан
  УУРТАЙ // бухимдсан, цухалдсан
}

enum CalendarType {
  GOAL
  DONE
  REMINDER
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String?
  username String
  birthday DateTime?
 
   avatar   String?
  diaryNotes DiaryNote[]
achievements Achievement[]
  progress Progress?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DiaryNote {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  note     String      @db.Text
  analysis AiAnalysis?

  aiInsight AiInsight?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AiAnalysis {
  id          Int       @id @default(autoincrement())
  diaryNoteId Int       @unique
  diaryNote   DiaryNote @relation(fields: [diaryNoteId], references: [id])

  summary   String?      @db.Text
  emotions  EmotionCategory[] 

  topics    String[] // массив хадгалах
  moodAction String?

  // calendarTasks     String[]   // тухайн өдрийн diary-с гаргасан "хийсэн зүйлс", "зорилтууд"
  // calendarHighlight String?     // calendar дээр харагдах хамгийн товч нэг өгүүлбэр
  // calendarDate      DateTime?   // diary бичсэн өдөртэй sync-лэгдэнэ
  // calendarType      CalendarType?     // "done", "goal", "reminder" гэх мэт төрөл

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AiInsight {
  id           Int       @id @default(autoincrement())
  diaryNoteId  Int       @unique
  diaryNote    DiaryNote @relation(fields: [diaryNoteId], references: [id])

  mood_caption   String?
  fun_fact       String?
    achievements   Json[]   
}

model Achievement {
  id      Int    @id @default(autoincrement())
  achId   String
  title   String
  desc    String
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, achId]) // <== upsert ажиллахын тулд
}




model Progress {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  streakCount Int @default(0)
  points      Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
